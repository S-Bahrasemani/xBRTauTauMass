#!/usr/bin/env python

import os
import subprocess
import glob
import logging

from brtautau import UNMERGED_NTUPLE_PATH, NTUPLE_PATH
from brtautau.datasets import create_database, read_database

log = logging.getLogger(os.path.basename(__file__))


"""
This driver walks through the directory where
the flat ntuple files have been produced and
1 - create a database
2 - read the database and merge the output.
"""

if __name__ == '__main__':
    from rootpy.extern.argparse import ArgumentParser
    parser = ArgumentParser()
    parser.add_argument('action', type=str, choices=['db', 'clean', 'merge'])
    parser.add_argument('--dry', action='store_true', default=False)
    args = parser.parse_args()
    print args

    # Create the database
    if args.action == 'db':
        create_database()

    # Cleaning block
    if args.action == 'clean':
        SAMPLES = read_database()
        print SAMPLES
        log.info('To be added')

    # merging block
    if args.action == 'merge':
        SAMPLES = read_database()
        for mode, sample_masses in SAMPLES.items():
            for mass, samples_part in sample_masses.items():
                for part, samples in samples_part.items():
                    target_file = 'flat_{0}_{1}_{2}.root'.format(
                        mode, mass, part)
                    target_file = os.path.join(NTUPLE_PATH, target_file)
                    print target_file
                    cmd = 'hadd {0} {1}'.format(target_file, ' '.join(samples))
                    if args.dry:
                        log.info(cmd)
                    else:
                        subprocess.call(cmd, shell=True)

